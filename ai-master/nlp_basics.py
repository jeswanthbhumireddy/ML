# -*- coding: utf-8 -*-
"""NLP_Basics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L1aTvNMlkt4ZD2ZQya7iIV8KEX9wyw11

## NLP Basics

### Download NLTK libraries
"""

import nltk
nltk.download('all')

"""### Tokenization

A paragraph or string can be separated it into different sentences using sent_tokenize() method. A List of those sentences is returned. The tokenization happens based on dot (.) or comma (,)

A paragraph or string can be separated it into different words using word_tokenize() method.  Tokenization is carried out based on the delimiter space.
"""

sampletext = """No human, or team of humans, could possibly keep up
	 with the avalanche of information produced by many of todayâ€™s physics 
	 and astronomy experiments. Some of them record terabytes of data 
	 every day and the torrent is only increasing. The Square Kilometer Array, 
	 a radio telescope slated to switch on in the mid-2020s, will generate about 
	 as much data traffic each year as the entire internet."""

"""### Tokenizing sentences"""

sentences = nltk.sent_tokenize(sampletext)

sentences

print(type(sentences))

for i in range(len(sentences)):
    print(sentences[i])

"""### Tokenizing words"""

words = nltk.word_tokenize(sampletext)
print(words)

len(words)

"""### Stemming

Stemming is the process of reducing derived words to their root form
"""

from nltk.stem import PorterStemmer
stemmer = PorterStemmer()

stemmer.stem("analysis")

stemmer.stem("experiments")

"""Apply stemming on all sentences"""

for i in range(len(sentences)):
    words = nltk.word_tokenize(sentences[i])
    stemmed_words = [stemmer.stem(word) for word in words]
    sentences[i] = ' '.join(stemmed_words)

sentences

"""### Stop Words

A process of removing commonly occuring words such as - "a" , "an" , "the", "or"
"""

from nltk.corpus import stopwords

samplesentence = "That's a beautiful tiger sleeping in the backyard"

words = nltk.word_tokenize(samplesentence)

"""Apply stop words"""

words = [word for word in words if word not in stopwords.words('english')]

words

"""### Regular Expression

A regular expression or regex is a "sequence of characters" that define a specific search pattern using which you can match or substitute patterns inside a text with least amount of code

regular expression are much more faster as they are optimized

RegEx is used in NLP for text cleansing

Import the re library for regular expression
"""

import re

original_sentence = "That's a $%^5 beautiful @tiger sleeping in the backyard 123 "

"""Remove only digits"""

sentence1 = re.sub(r'\d','',original_sentence)

sentence1

"""Remove all characters except a to z or A to Z and replace them with a space"""

sentence2 = re.sub('[^a-zA-Z]',' ',original_sentence)

sentence2

"""Replace one or more space with single space"""

sentence3 = re.sub(r'\s+',' ',sentence2)

sentence3

"""Remove single character like s"""

sentence4 = re.sub(r"\s+[a-zA-Z]\s+",' ',sentence3)

sentence4

"""Replace a word with another word"""

sentence5 = re.sub(r'tiger','lion',sentence4)

sentence5

sentence6 = "abc 123&&%(%*T%&G) bbbg"

"""Remove all junk canractes with capital W"""

sentence7 = re.sub(r'\W',' ',sentence6)

print(sentence7)

