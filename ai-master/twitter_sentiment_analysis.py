# -*- coding: utf-8 -*-
"""Twitter_Sentiment_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17byk1ZAI9P5X9zjpLMslrBA12xPIzkXt

## Import Tweepy

An easy-to-use Python library for accessing the Twitter API
"""

import tweepy

"""## Define variables for keys and tokens required for authorization"""

consumer_key='ySTUrA4LKm3u5ScyII7YM0war'
consumer_secret='5iCEhA1un8sXe6o84CRL6XPGjdb8SXBUdotsNeS2QOvxxI6WGq'
access_token ='1156204423539912704-A3GGCnfSTTgBvvjDmRaBD2IDexoFxk'
access_secret='SP6qu6fvn6I5KNlX45RIV8GT2NNjFQ3BfPlhxskPGhnA4'

"""## Define Auth variables with keys"""

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_secret)

"""## Define timeout 20 second"""

api = tweepy.API(auth,timeout=20)

"""## Define text for which you want to fetch the tweet"""

tweet_text = 'asteroid';

"""## Create an empty list to store tweets"""

tweets_list = []

"""## Fetch the tweet and store it in the list"""

for status in tweepy.Cursor(api.search,q=tweet_text,lang='en',result_type='recent').items(500):
        tweets_list.append(status.text)

"""## Check how many tweets got fetched"""

len(tweets_list)

"""## Check sample tweets"""

tweets_list[3]

tweets_list[80]

"""## Clean the tweets with Regular Expression"""

import re

for i in range(len(tweets_list)):
  # get each tweet
  tweet = tweets_list[i]
  tweet = tweet.lower()
  # remove junk characters 
  tweet = re.sub(r'\W',' ',tweet)
  # remove one or more space
  tweet = re.sub(r'\s+',' ',tweet)
  # Remove all characters except a to z or A to Z and replace them with a space
  tweet = re.sub('[^a-zA-Z]',' ',tweet)
  # store the clean tweet back in the list
  tweets_list[i] = tweet

"""## Check sample tweets after cleaning"""

tweets_list[3]

tweets_list[80]

"""## Load the Classifier and TF IDF vectorizer from pickle files"""

import pickle

with open('classifier.pickle','rb') as file:
    classifier = pickle.load(file)

with open('tfidfmodel.pickle','rb') as file:
    tfidf = pickle.load(file)

"""## Define variables for storing count for each sentiment type"""

positive_tweet = 0
negative_tweet = 0

"""## For each tweet predict sentiment and increment sentiment counter"""

for tweet in tweets_list:
  sentiment = classifier.predict(tfidf.transform([tweet]).toarray())
  if sentiment[0] == 1:
    positive_tweet += 1
  else:
    negative_tweet += 1

"""## Check how many positive and negative tweets are there"""

positive_tweet

negative_tweet

"""## Create a bar chart to display sentiment count"""

import matplotlib.pyplot as plt
import numpy as np

sentiment_type = ('Positive', 'Negative')

y_pos = np.arange(len(sentiment_type))

sentiment_count = [positive_tweet,negative_tweet]

plt.barh(y_pos, sentiment_count, align='center', alpha=0.5)
plt.yticks(y_pos, sentiment_type)
plt.xlabel('Count')
plt.title('Twitter Sentiment Analysus')
plt.show()

